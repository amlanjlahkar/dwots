#!/usr/bin/env bash

# ufetch-arch - tiny system info for arch.
# Original Author: https://gitlab.com/jschx
# Source: https://gitlab.com/jschx/ufetch/-/blob/master/ufetch-arch


## info
# user is already defined
host="$(head /etc/hostname)"
kernel="$(uname -r)"
uptime="$(uptime -p | sed 's/up //')"
shell="$(basename "${SHELL}")"

## os detection
os_id="$(grep "^ID" /etc/os-release)"
os="$(echo ${os_id#*=} | tr -d '"')"

# calculate pkg count
case "$os" in
    'void')
        pkg_count="$(xbps-query -l | wc -l)"
        ;;
    'arch')
        pkgs_native="$(pacman -Qn | wc -l)"
        pkgs_foreign="$(pacman -Qem | wc -l)"
        pkg_count="${packages_native} (native), ${packages_foreign} (aur)"
        ;;
esac

## ui detection
parse_rcs() {
	for f in "${@}"; do
		wm="$(tail -n 1 ${f} 2> /dev/null | cut -d ' ' -f 2)"
        [ -n "${wm}" ] && echo ${wm} && return
	done
}

rcwm="$(parse_rcs "${HOME}/.config/X11/xinitrc" "${HOME}/.xsession")"

ui='unknown'
uitype='UI'
if [ -n "${DE}" ]; then
	ui="${DE}"
	uitype='de'
elif [ -n "${WM}" ]; then
	ui="${WM}"
	uitype='de'
elif [ -n "${XDG_CURRENT_DESKTOP}" ]; then
	ui="${XDG_CURRENT_DESKTOP}"
	uitype='de'
elif [ -n "${DESKTOP_SESSION}" ]; then
	ui="${DESKTOP_SESSION}"
	uitype='de'
elif [ -n "${rcwm}" ]; then
	ui="${rcwm}"
	uitype='wm'
elif [ -n "${XDG_SESSION_TYPE}" ]; then
	ui="${XDG_SESSION_TYPE}"
fi

ui="$(basename "${ui}")"


## get memory usage
mem_total="$(grep "MemTotal" /proc/meminfo | awk '{print $2}' | xargs -I "KiB" awk "BEGIN {print "KiB"/1024}")"
mem_free="$(grep "MemFree" /proc/meminfo | awk '{print $2}' | xargs -I "KiB" awk "BEGIN {print "KiB"/1024}")"
buffers="$(grep "Buffers" /proc/meminfo | awk '{print $2}' | xargs -I "KiB" awk "BEGIN {print "KiB"/1024}")"
cache="$(grep "Cached" /proc/meminfo | awk '{print $2}' | xargs -I "KiB" awk "BEGIN {print "KiB"/1024}")"

mem_used="$(echo "$(awk "BEGIN {print $mem_total - $mem_free - $buffers - $cache}") MiB / ${mem_total} MiB")"


## define colors
# probably don't change these
if [ -x "$(command -v tput)" ]; then
	bold="$(tput bold)"
	black="$(tput setaf 0)"
	red="$(tput setaf 1)"
	green="$(tput setaf 2)"
	yellow="$(tput setaf 3)"
	blue="$(tput setaf 4)"
	magenta="$(tput setaf 5)"
	cyan="$(tput setaf 6)"
	white="$(tput setaf 7)"
	reset="$(tput sgr0)"
fi

# you can change these
cg="${reset}${green}"
cy="${reset}${yellow}"
cr="${reset}${red}"
cb="${reset}${blue}"
cc="${reset}${cyan}"
cm="${reset}${magenta}"
cn="${reset}"


## output
cat <<EOF

${cy}${USER}${cn}@${cy}${host}${reset}
$(echo "--------------")
${cg}os:        ${cn}${os}${reset}
${cg}kernel:    ${cn}${kernel}${reset}
${cg}uptime:    ${cn}${uptime}${reset}
${cg}packages:  ${cn}${pkg_count}${reset}
${cg}shell:     ${cn}${shell}${reset}
${cg}terminal:  ${cn}${TERMINAL}${reset}
${cg}${uitype}:        ${cn}${ui}${reset}
${cg}memory:    ${cn}${mem_used}${reset}

EOF

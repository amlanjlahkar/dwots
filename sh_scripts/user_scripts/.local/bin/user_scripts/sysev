#!/usr/bin/env bash

# script to perform system events through a menu
# NOTE: on non-systemd machines, users have to have appropriate permissions for the actions
# dependencies: rofi(or dmenu)

actions=( 'lock' 'suspend' 'quit' 'reboot' 'poweroff' )
selected="$(printf '%s\n' "${actions[@]}" | rofi -dmenu -i -p 'select: ')"
[ -z "$selected" ] && exit 2

function prompt() {
    [[ $(echo -e "No\nYes" | rofi -dmenu -i -p "$1") = 'Yes' ]] && $2
}

function initdo() {
    init_sys="$(readlink /sbin/init)"
    case "$init_sys" in
        *systemd*)
            systemctl "$selected" ;;
        *runit*)
            doas "$selected" ;;
    esac
}

function detect_wm() {
    # parse xinitrc file
    wm="$(tail -n1 "${XDG_CONFIG_HOME}"/X11/xinitrc 2>/dev/null | cut -d' ' -f2)"
    [ -n "$wm" ] && printf '%s\n' "$wm"
}

case "$selected" in
    'lock')
        prompt 'lock screen now?' "slock" ;;
    'suspend')
        prompt 'suspend system?' "slock systemctl suspend --check-inhibitors=no" ;;
    'quit')
        prompt 'quit xorg?' "kill -TERM $(pgrep -u "$USER" -x `detect_wm`)" ;;
    'reboot')
        prompt 'reboot system?' initdo ;;
    'poweroff')
        prompt 'shutdown system?' initdo ;;
esac

#!/usr/bin/env bash

# fetch system info
# Origin: https://gitlab.com/jschx/ufetch

## info
# user is already defined
host="$(head /etc/hostname)"
kernel="$(uname -r)"
uptime="$(uptime -p | sed 's/up //')"
shell="$(basename "${SHELL}")"

## os detection
os_id="$(grep "^ID" /etc/os-release)"
os="$(echo ${os_id#*=} | tr -d '"')"

# calculate pkg count
case "$os" in
  'void')
    pkg_count="$(xbps-query -l | wc -l) (xbps)"
    ;;
  'arch')
    pkgs_native="$(pacman -Qn | wc -l)"
    pkgs_foreign="$(pacman -Qem | wc -l)"
    pkg_count="${packages_native} (pacman), ${packages_foreign} (aur)"
    ;;
esac

## ui detection
parse_rcs() {
  for f in "${@}"; do
    wm="$(tail -n 1 ${f} 2>/dev/null | cut -d ' ' -f 2)"
    [ -n "${wm}" ] && echo ${wm} && return
  done
}

rcwm="$(parse_rcs "${HOME}/.config/X11/xinitrc" "${HOME}/.xsession")"

ui='unknown'
uitype='UI'
if [ -n "${DE}" ]; then
  ui="${DE}"
  uitype='de'
elif [ -n "${WM}" ]; then
  ui="${WM}"
  uitype='de'
elif [ -n "${XDG_CURRENT_DESKTOP}" ]; then
  ui="${XDG_CURRENT_DESKTOP}"
  uitype='de'
elif [ -n "${DESKTOP_SESSION}" ]; then
  ui="${DESKTOP_SESSION}"
  uitype='de'
elif [ -n "${rcwm}" ]; then
  ui="${rcwm}"
  uitype='wm'
elif [ -n "${XDG_SESSION_TYPE}" ]; then
  ui="${XDG_SESSION_TYPE}"
fi

ui="$(basename "${ui}")"

## get memory usage
while IFS=':k ' read -r mem info _; do
  case "$mem" in
    MemTotal) total="$((info / 1024))" ;;
    MemAvailable) free="$((total - (info / 1024)))" ;;
  esac
done </proc/meminfo
mem_used="$(printf '%d/%d MiB\n' "$free" "$total")"

## define colors
# probably don't change these
if [ -x "$(command -v tput)" ]; then
  bold="$(tput bold)"
  black="$(tput setaf 0)"
  red="$(tput setaf 1)"
  green="$(tput setaf 2)"
  yellow="$(tput setaf 3)"
  blue="$(tput setaf 4)"
  magenta="$(tput setaf 5)"
  cyan="$(tput setaf 6)"
  white="$(tput setaf 7)"
  yellowB="$(tput setaf 14)"
  reset="$(tput sgr0)"
fi

# you can change these
cB="${reset}${bold}"
cg="${reset}${green}"
cy="${reset}${yellow}"
cr="${reset}${red}"
cb="${reset}${blue}"
cc="${reset}${cyan}"
cm="${reset}${magenta}"
cY="${reset}${yellowB}"
cn="${reset}"

## output
cat <<EOF

${cY}user:      ${cn}${USER}${reset}
${cY}host:      ${cn}${host}${reset}
${cY}os:        ${cn}${os}${reset}
${cY}kernel:    ${cn}${kernel}${reset}
${cY}uptime:    ${cn}${uptime}${reset}
${cY}packages:  ${cn}${pkg_count}${reset}
${cY}shell:     ${cn}${shell}${reset}
${cY}terminal:  ${cn}${TERMINAL}${reset}
${cY}${uitype}:        ${cn}${ui}${reset}
${cY}memory:    ${cn}${mem_used}${reset}

EOF

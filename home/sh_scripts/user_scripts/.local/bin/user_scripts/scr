#!/usr/bin/env bash

# Allows quick creation of single sourcecode file for testing purpose.
# Dependencies: fd, ripgrep

export _SCR_CACHELOG="${XDG_CACHE_HOME:-"$HOME/.cache"}/userscript-cache/scr_pairs.txt"
if [ ! -f "$_SCR_CACHELOG" ]; then mkdir -p "${_SCR_CACHELOG%/*}" && touch "$_SCR_CACHELOG"; fi

export ROOT="$HOME/projects/code"
export EXT="$1"

check_pair() {
  req_pair="rg \"^$FT=|=$EXT$\" -- \"$_SCR_CACHELOG\""
  if ! eval "$req_pair" 1>/dev/null; then
    if [ -n "$FT" ]; then
      read -r -p "Extension to use for filetype($FT): " EXT
      [ -z "$EXT" ] && EXT="$FT"
    else
      read -r -p "Filetype to use for extension($EXT): " FT
      if [ -z "$FT" ]; then
        printf '%s\n' "Filetype missing."
        exit 2
      fi
    fi
    printf '%s\n' "$FT=$EXT" >>"$_SCR_CACHELOG"
  else
    IFS='=' read -r FT EXT < <(eval "$req_pair")
  fi
}

create_scdir() {
  declare -rg SCRDIR="${ROOT}/${FT}/scratch"
  if [ ! -d "$SCRDIR" ]; then
    read -r -p "Proceed to create directory '$SCRDIR'? [Y/n] " input
    case "$input" in
      'Y' | 'y' | 'yes') mkdir -p "$SCRDIR" ;;
      *) exit ;;
    esac
  fi
}

main() {
  if rg -q "$ROOT/[aA-zA]*/scratch" <<<"$PWD"; then
    IFS='/' read -r FT _ <<<"${PWD#*/code/}"
    [ -n "$EXT" ] && unset -v FT
  elif [ -z "$EXT" ]; then
    printf '%s\n' "Filetype extension missing."
    exit 2
  fi

  check_pair
  create_scdir
  if [[ -n "$SCRDIR" && "$PWD" != "$SCRDIR" ]]; then
    pushd "$SCRDIR" &>/dev/null || exit
  fi

  # TODO: handle random number collision
  while :; do
    read -r -p 'Filename(default will be a random 3 digit integer): ' fname
    if [ -z "$fname" ]; then
      fname="scratch_${RANDOM::3}"
      break
    elif [ -n "$fname" ] && fd -Hq --exact-depth 1 "$fname"; then
      printf '%s\n' "File already exists"
    else
      break
    fi
  done
  echo -e "$EDITOR ${fname}.$EXT"
}

main
